<Window
    x:Class="RocketLaunch.Views.MainV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Views="clr-namespace:RocketLaunch.Views"
    xmlns:convertersWpf="clr-namespace:ConvertersWPF;assembly=ConvertersWPF"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:l="clr-namespace:RocketLaunch.Helper"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    Width="1020"
    Height="751.2"
    HorizontalAlignment="Center"
    VerticalAlignment="Center"
    AllowsTransparency="True"
    Background="Transparent"
    DataContext="{Binding MainVM, Source={StaticResource Locator}}"
    Deactivated="Window_Deactivated"
    FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
    KeyDown="WinOnKeyDown"
    Loaded="OnLoaded"
    PreviewMouseLeftButtonDown="OnMouseLeftButtonDown"
    PreviewMouseLeftButtonUp="OnMouseLeftButtonUp"
    PreviewMouseMove="OnMouseMove"
    ShowInTaskbar="False"
    SizeChanged="WindowStateChanged"
    Style="{StaticResource WindowStyle}"
    TextElement.FontSize="16"
    TextElement.FontWeight="Medium"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Topmost="True"
    UseLayoutRounding="True"
    WindowStyle="None">
    <Window.Icon>
        <Binding Converter="{StaticResource ConvertMaterialDesignIconToIcon}">
            <Binding.Source>
                <materialDesign:PackIcon
                    Width="256"
                    Height="256"
                    Foreground="WhiteSmoke"
                    Kind="Rocket" />
            </Binding.Source>
        </Binding>
    </Window.Icon>


    <Window.Resources>
        <Style
            x:Key="SelectedTextBoxStyle"
            BasedOn="{StaticResource MaterialDesignTextBox}"
            TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsFocused}" Value="True">
                    <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--<l:StringToRichTextBoxConverter x:Key="RichTextConverter" />-->
        <!--<focus:IndexConverter x:Key="IndexConverter" />-->
        <!--<Storyboard x:Key="FadeOut">
        -->
        <!--<ObjectAnimationUsingKeyFrames BeginTime="0:0:0" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Visible</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>-->
        <!--
            <DoubleAnimation BeginTime="0:0:0.0" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.300"/>

        -->
        <!--<ObjectAnimationUsingKeyFrames BeginTime="0:0:5.5" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <Visibility>Hidden</Visibility>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>-->
        <!--
        </Storyboard>
        <Storyboard x:Key="FadeIn">
            <DoubleAnimation BeginTime="0:0:0.0" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.300"/>
        </Storyboard>-->

    </Window.Resources>

    <Grid>

        <tb:TaskbarIcon
            IconSource="/Assets/rocket.ico"
            PopupActivation="RightClick"
            ToolTipText="Rocket Launch"
            TrayLeftMouseDown="ToogleWindowState"
            Visibility="Visible">

            <tb:TaskbarIcon.TrayToolTip>
                <Border
                    Padding="3"
                    Background="White"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Opacity="0.8">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Text="RocketLaunch" />
                </Border>
            </tb:TaskbarIcon.TrayToolTip>
            <tb:TaskbarIcon.TrayPopup>
                <materialDesign:Card Margin="10" Padding="10">

                    <StackPanel Width="150">

                        <!--<Button Style="{StaticResource MaterialDesignFlatButton}" ToolTip="Follow me on Twitter">
                            <materialDesign:PackIcon Kind="TwitterBox" />
                        </Button>-->
                        <StackPanel
                            Margin="0,20,0,20"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                            <TextBlock
                                HorizontalAlignment="Center"
                                FontSize="15"
                                FontWeight="Medium"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Text="RocketLaunch"
                                TextElement.FontSize="16" />
                            <materialDesign:PackIcon
                                Margin="5,0,0,0"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                Kind="Rocket" />
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Center">
                            <CheckBox
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="Autostart"
                                FontSize="15"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                IsChecked="{Binding S.AutoStart}"
                                ToolTip="Autostart with windows"
                                ToolTipService.HorizontalOffset="20"
                                ToolTipService.Placement="Right"
                                ToolTipService.VerticalOffset="0" />
                            <CheckBox
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="Release WinKey"
                                FontSize="15"
                                Foreground="{DynamicResource MaterialDesignBody}"
                                IsChecked="{Binding S.ReleaseWinKey}"
                                ToolTip="Release windows key override"
                                ToolTipService.HorizontalOffset="20"
                                ToolTipService.Placement="Right"
                                ToolTipService.VerticalOffset="0" />
                        </StackPanel>

                        <Button
                            Margin="10,20"
                            Command="{Binding CloseApplicationCmd}"
                            ToolTip="Close RocketLaunch"
                            ToolTipService.HorizontalOffset="20"
                            ToolTipService.Placement="Right"
                            ToolTipService.VerticalOffset="0">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Foreground="{DynamicResource MaterialDesignBody}" Text="Close" />
                                <materialDesign:PackIcon
                                    Margin="10,0,0,0"
                                    Foreground="{DynamicResource MaterialDesignBody}"
                                    Kind="Rocket" />
                            </StackPanel>
                        </Button>


                    </StackPanel>




                </materialDesign:Card>
            </tb:TaskbarIcon.TrayPopup>
        </tb:TaskbarIcon>
        <Border
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Background="{DynamicResource MaterialDesignPaper}"
            BorderBrush="{StaticResource MaterialDesignCardBackground}"
            BorderThickness="2"
            CornerRadius="10,10,10,10" />
        <materialDesign:Transitioner AutoApplyTransitionOrigins="True" SelectedIndex="{Binding SelectedViewIndex}">
            <!--<materialDesign:Transitioner.InputBindings>
                <KeyBinding Key="Left" Command="{x:Static materialDesign:Transitioner.MovePreviousCommand}" />
                <KeyBinding Key="Right" Command="{x:Static materialDesign:Transitioner.MoveNextCommand}" />
            </materialDesign:Transitioner.InputBindings>-->
            <!--  you can use a slide for each page, let's add a touch of fade for our first page  -->

            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=FadeIn}">
                <materialDesign:Card Margin="10" VerticalAlignment="Stretch">
                    <Grid>

                        <StackPanel Margin="10">
                            <!--  focus:FocusExtension.IsFocused="{Binding IsFocused}"  -->
                            <Grid>
                                <Button
                                    Width="100"
                                    Height="100"
                                    Margin="0,20,0,20"
                                    materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="{Binding Indexing.IndexingIsRunning}"
                                    materialDesign:ButtonProgressAssist.Value="-1"
                                    Style="{StaticResource MaterialDesignFloatingActionButton}">
                                    <Button.InputBindings>
                                        <MouseBinding Command="{Binding ToggleDebugMode, Mode=OneTime}" Gesture="MiddleClick" />
                                        <MouseBinding Command="{Binding OpenLogFile, Mode=OneTime}" Gesture="RightClick" />
                                    </Button.InputBindings>
                                    <!--<Image Source="../Assets/rocket.png"></Image>-->
                                    <svgc:SvgViewbox
                                        AutoSize="False"
                                        Source="pack://application:,,,/Assets/rocket.svg"
                                        ToolTip="{convertersWpf:SwitchBinding Indexing.IndexingIsRunning,
                                                                              RocketLaunch - Indexing...,
                                                                              RocketLaunch}" />
                                </Button>
                                <StackPanel
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Orientation="Horizontal">
                                    <Button
                                        Margin="1"
                                        Command="{Binding OpenSettingsWindowCmd}"
                                        Style="{StaticResource MaterialDesignIconForegroundButton}"
                                        ToolTip="Settings">
                                        <materialDesign:PackIcon Foreground="Gray" Kind="Settings" />
                                    </Button>
                                    <Button
                                        Margin="1"
                                        Command="{Binding OpenAboutWindowCmd}"
                                        Style="{StaticResource MaterialDesignIconForegroundButton}"
                                        ToolTip="About">
                                        <materialDesign:PackIcon Foreground="Gray" Kind="InformationCircleOutline" />
                                    </Button>
                                </StackPanel>
                            </Grid>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <TextBox
                                    x:Name="SearchTextBox"
                                    Grid.ColumnSpan="2"
                                    Margin="10,10,10,0"
                                    materialDesign:HintAssist.Hint="Search..."
                                    AcceptsReturn="False"
                                    AcceptsTab="False"
                                    Style="{StaticResource SelectedTextBoxStyle}"
                                    Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}">

                                    <TextBox.InputBindings>
                                        <KeyBinding Key="Enter" Command="{Binding ExecuteFirstListViewItem}" />
                                        <KeyBinding Key="Down" Command="{Binding DownKeyPressedCmd}" />
                                        <KeyBinding Key="Up" Command="{Binding UpKeyPressedCmd}" />
                                        <!--<KeyBinding Key="PageDown" Command="{Binding ExecuteFirstListViewItem}" />
        <KeyBinding Key="PageUp" Command="{Binding ExecuteFirstListViewItem}" />
        <KeyBinding Key="PageUp" Command="{Binding AnyKeyPressed}" />-->
                                    </TextBox.InputBindings>
                                    <!--<TextBox.InputBindings>
                    <KeyBinding
                        Key="Enter"
                        Command="{Binding ExecuteFirstListViewItem}"
                         />
                </TextBox.InputBindings>-->

                                </TextBox>

                            </Grid>

                            <Popup
                                Name="MyToolTip"
                                Width="Auto"
                                Height="Auto"
                                AllowsTransparency="True"
                                StaysOpen="True">
                                <Grid>
                                    <materialDesign:Card Margin="10" materialDesign:ShadowAssist.ShadowDepth="Depth2">
                                        <ListBox>
                                            <TextBlock MouseDown="Hide_Window" Text="Open containing folder">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <i:InvokeCommandAction Command="{Binding OpenContaningFolderCmd}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBlock>
                                            <TextBlock MouseDown="Hide_Window" Text="Open as administrator">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <i:InvokeCommandAction Command="{Binding ExecuteAsAdminCmd}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                            </TextBlock>
                                            <TextBlock MouseDown="HidePopupAndResetFocusOnTextBoox" Text="Reset counter">
                                                <TextBlock.ToolTip>
                                                    <TextBlock>
                                                        This resets the counter for the current item and lessens it's ranking when searching.
                                                    </TextBlock>
                                                </TextBlock.ToolTip>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                                        <i:InvokeCommandAction Command="{Binding ResetCounterCmd}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>

                                            </TextBlock>
                                        </ListBox>
                                    </materialDesign:Card>
                                </Grid>
                            </Popup>

                            <ListView
                                Margin="10,0,10,10"  
                                VirtualizingPanel.ScrollUnit="Item"
                                VirtualizingPanel.VirtualizationMode="Recycling"
                                ItemsSource="{Binding SearchSuggestions}"
                                SelectedIndex="{Binding SelectedIndex}"
                                SizeChanged="ListView_SizeChanged">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding DoubleClickOnItemCmd}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ListView.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding DoubleClickOnItemCmd}" />
                                </ListView.InputBindings>
                                <ListView.ItemContainerStyle>
                                    <Style BasedOn="{StaticResource MaterialDesignGridViewItem}" TargetType="{x:Type ListViewItem}">
                                        <!--<Setter Property="Focusable" Value="false" />-->
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <EventSetter Event="Mouse.PreviewMouseDown" Handler="Show_PopupToolTip" />
                                        <EventSetter Event="Mouse.PreviewMouseUpOutsideCapturedElement" Handler="Hide_PopupToolTip" />

                                    </Style>



                                </ListView.ItemContainerStyle>

                                <!--<ListView.Resources>
                                    <Style TargetType="ListViewItem">

                                    </Style>
                                </ListView.Resources>-->
                                <ListView.View>
                                    <GridView>
                                        <!--  This is index column. Dont't want that right now  -->
                                        <!--<GridViewColumn
                            Width="100"
                            DisplayMemberBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}"
                             />-->

                                        <GridViewColumn>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Grid HorizontalAlignment="Stretch" ToolTip="{Binding URI}">

                                                        <StackPanel Grid.Column="0" Height="32" Orientation="Horizontal">
                                                            <Grid
                                                                Width="32" Height="32"
                                                                Margin="0,0,20,0"
                                                                Background="{Binding IconBackGround}">
                                                                <Image Width="32" Height="32" Source="{Binding Icon}" />
                                                            </Grid>
                                                            <StackPanel>

                                                                <!--<rich:RichTextEditor FontSize="14" Foreground="LightGray">
                                            <rich:RichTextEditor.Text>
                                                <MultiBinding Converter="{StaticResource RichTextConverter}">
                                                    <Binding ElementName="{Binding Name}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"></Binding>
                                                    <Binding ElementName="{Binding SearchString}"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"></Binding>
                                                </MultiBinding>
                                            </rich:RichTextEditor.Text>

                                        </rich:RichTextEditor>-->
                                                                <TextBlock FontSize="14" Text="{Binding Name}" />
                                                                <ContentControl FontSize="9">
                                                                    <StackPanel Orientation="Horizontal">
                                                                        <TextBlock Text="{Binding URI}" />
                                                                        <TextBlock Text=" " />
                                                                        <TextBlock Text="{Binding Arguments}" />
                                                                    </StackPanel>
                                                                </ContentControl>

                                                            </StackPanel>
                                                        </StackPanel>

                                                    </Grid>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <!--  l:GridViewColumnVisibilityManager.IsVisible="{Binding S.Settings.DebugMode}"  -->
                                        <GridViewColumn>
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock
                                                        Text="{Binding RunNrOfTimes}"
                                                        TextAlignment="Right"
                                                        ToolTip="Nr of runs" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>


                            </ListView>
                            <StackPanel Margin="20,20,0,20" Visibility="{convertersWpf:SwitchBinding S.Settings.DebugMode, Visible, Collapsed}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Indexing.NrOfPaths}" />
                                    <TextBlock Text=" nr of paths" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Gen search Time: " />
                                    <TextBlock Text="{Binding Indexing.GeneralSearchTime}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="SelectedIndex: " />
                                    <TextBlock Text="{Binding SelectedIndex}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Prio search time: " />
                                    <TextBlock Text="{Binding Indexing.PrioSearchTime}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Total search time: " />
                                    <TextBlock Text="{Binding Indexing.TotalSearchTime}" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Rendering time: " />
                                    <TextBlock Text="{Binding RenderingTime}" />
                                </StackPanel>

                            </StackPanel>

                        </StackPanel>

                    </Grid>
                </materialDesign:Card>
            </materialDesign:TransitionerSlide>
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=FadeIn}">

                <Views:SettingsV
                    Margin="10"
                    PreviewMouseLeftButtonDown="OnMouseLeftButtonDown"
                    PreviewMouseLeftButtonUp="OnMouseLeftButtonUp"
                    PreviewMouseMove="OnMouseMove" />

            </materialDesign:TransitionerSlide>
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=SlideInFromTop}">

                <Views:AboutUserCtrl
                    Margin="10"
                    PreviewMouseLeftButtonDown="OnMouseLeftButtonDown"
                    PreviewMouseLeftButtonUp="OnMouseLeftButtonUp"
                    PreviewMouseMove="OnMouseMove" />

            </materialDesign:TransitionerSlide>
            <!--<materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=FadeIn}">
                <materialDesign:Card Margin="10" VerticalAlignment="Stretch">
            -->
            <!--<views:CalibrateSquareUserCtrl />-->
            <!--
                </materialDesign:Card>
            </materialDesign:TransitionerSlide>
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect Kind=FadeIn}">
                <materialDesign:Card Margin="10">
            -->
            <!--<views:CalibrateLengthUserCtrl />-->
            <!--
                </materialDesign:Card>
            </materialDesign:TransitionerSlide>-->

        </materialDesign:Transitioner>


    </Grid>
    <!--</Viewbox>-->
</Window>

